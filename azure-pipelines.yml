trigger:
  branches:
    include:
      - master

stages:
  - stage: build
    displayName: Build
    jobs:
      - job: build
        displayName: Build
        pool:
          name: Azure Agent Rick
        steps:
          - script: |
              mvn clean compile -Dversion=5.3.8-SNAPSHOT

          - task: CopyFiles@2
            displayName: 'Copy JMX file to artifact staging directory'
            inputs:
              SourceFolder: 'jmeter-tests'
              contents: 'PetclinicLoadTest.jmx' 
              TargetFolder: '$(Build.ArtifactStagingDirectory)'

          - task: CopyFiles@2
            displayName: 'Copy petclinic.war artifact'
            inputs:
              SourceFolder: '/home/rickwinkens/myagent/_work/2/s/target'
              contents: 'petclinic'
              TargetFolder: '$(Build.ArtifactStagingDirectory)'

  - stage: deploy_to_test
    displayName: Deploy to Test Environment
    dependsOn: build
    jobs:
      - job: deploy_to_test
        displayName: Deploy to Test Environment
        pool:
          name: Azure Agent Rick
        steps:
          - script: sudo ansible-playbook -i localhost /home/rickwinkens/ansible_project/playbook/test.yml
         
  - stage: deploy_to_tomcat
    displayName: Deploy to Tomcat
    dependsOn: build
    jobs:
      - job: deploy_to_tomcat
        displayName: Deploy to Tomcat
        pool:
          name: Azure Agent Rick
        steps:
          - script: |
              mvn deploy -Dversion=5.3.8-SNAPSHOT
              sudo rm -rf /opt/tomcat/apache-tomcat-9.0.76/webapps/petclinic*
              sudo cp /home/rickwinkens/myagent/_work/2/s/target/petclinic.war /opt/tomcat/apache-tomcat-9.0.76/webapps

  - stage: JMeterLoadTest
    displayName: 'JMeter Load Test'
    dependsOn: deploy_to_tomcat

    jobs:
    - job: RunJmeterLoadTest
      pool:
       name: Azure Agent Rick

      steps:
      - task: DownloadPipelineArtifact@2
        displayName: 'Download petclinic.war Artifact'
        inputs:
          buildType: 'specific'
          project: 'Azure DevOps Challenge'
          pipeline: 'Azure DevOps Challenge'
          runVersion: 'latest'
          itemPattern: 'petclinic.war'
          downloadPath: '$(Build.ArtifactStagingDirectory)'

      - script: | 
          /opt/jmeter/bin/jmeter.sh -n -t $(System.DefaultWorkingDirectory)/jmeter-tests/*.jmx -JtargetHost=localhost -JtargetPort=8080 -l $(System.DefaultWorkingDirectory)/Results/result.jtl

      - task: PublishTestResults@2
        displayName: 'Publish JMeter test results'
        inputs:
          testResultsFormat: 'Junit'
          testResultsFiles: '**/results.jtl'
          failTaskOnFailedTests: True   
  
  - stage: deploy_to_acceptance
    displayName: Deploy to Acceptance Environment
    dependsOn: JMeterLoadTest
    jobs:
      - job: deploy_to_acceptance
        displayName: Deploy to Acceptance Environment
        pool:
          name: Azure Agent Rick
        steps:
          - script: sudo ansible-playbook -i localhost /home/rickwinkens/ansible_project/playbook/acceptance.yml

  - stage: RunSeleniumTests
    displayName: Run Selenium Tests
    dependsOn: JMeterLoadTest

    jobs:
    - job: RunSeleniumTestsJob
      pool:
        name: Azure Agent Rick
    
      steps:
      - script: python /home/rickwinkens/petclinic_tests/test_petclinic.py

  - stage: deploy_to_acceptance
    displayName: Deploy to Acceptance Environment
    dependsOn: JMeterLoadTest
    jobs:
      - job: deploy_to_acceptance
        displayName: Deploy to Acceptance Environment
        pool:
          name: Azure Agent Rick
        steps:
          - script: sudo ansible-playbook -i localhost /home/rickwinkens/ansible_project/playbook/production.yml